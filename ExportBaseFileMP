import pymysql
import csv
import os

# Configuração da conexão
conn = pymysql.connect(
    host='172.25.100.14',
    user='fecsantos',
    password='@Fec13022025',
    database='OlosCloud',
    charset='utf8mb4',
    cursorclass=pymysql.cursors.SSCursor  
)

query = """SELECT
    A.Orden,
	A.ID_Cliente,
	A.Nombre_Apellido,
	A.Nro_Doc,
	A.Tel_1,
	A.Tel_2,
	A.Tel_3,
	A.Tel_4,
	A.Tel_5,
	A.Email,
	A.Dias_Atraso,
	A.Mora_Total,
	A.Categoria_Producto,
	A.Pkey_List,
	A.Desc_List,
	A.Pais,
	A.Link_Crm,
	A.Marca_Riesgo,
    LTRIM(RTRIM(
            REPLACE(
                REPLACE(
                    REPLACE(A.Subcategoria_Producto, CHAR(13), ''),  -- Remove \r
                CHAR(10), ''),                           			 -- Remove \n
            CHAR(9), '')                                 			 -- Remove TAB
        )) AS Subcategoria_Producto
FROM 
    `DataStageMercadoPago`.`FilesMP` A
WHERE
    NOT EXISTS (
        SELECT 'X'
        FROM `DataStageMercadoPago`.`BaseCobTIT` B
        WHERE A.ID_Cliente = B.contrato
    );""" 

batch_size = 200000
file_counter = 1

# Diretório de saída
output_dir = r'C:\Users\fecsantos\Desktop'  
os.makedirs(output_dir, exist_ok=True)  

try:
    with conn.cursor() as cursor:
        cursor.execute(query)
        
        while True:
            rows = cursor.fetchmany(batch_size)
            if not rows:
                break

            filename = os.path.join(output_dir, f'Arquivo_MPFiles_{file_counter}.csv')
            with open(filename, 'w', newline='', encoding='utf-8') as f:
                writer = csv.writer(f, delimiter=';', quoting=csv.QUOTE_NONE, escapechar='\\')
                
                # Escrevendo cabeçalho
                if cursor.description:
                    header = [col[0] for col in cursor.description]
                    writer.writerow(header)
                
                # Escrevendo linhas
                writer.writerows(rows)
            
            print(f'Lote {file_counter} exportado: {len(rows)} linhas')
            file_counter += 1

finally:
    conn.close()
